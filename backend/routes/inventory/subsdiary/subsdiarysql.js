let statements = {
  insertSubidiary: {
         statement: `
         INSERT INTO INVENTORY.SUBSIDIARY_INV_SETUP (
            SUBSIDIARY_ID,
             COST_METHOD,
              PICKING_RULE_ID, 
            MATERIAL_ACCOUNT,
             MATERIAL_OVERHEAD_ACCOUNT, 
             MATL_OVHD_ABSORPTION_ACCT, 
            RESOURCE_ACCOUNT,
             PURCHASE_PRICE_VAR_ACCOUNT,
              AP_ACCRUAL_ACCOUNT, 
            OVERHEAD_ACCOUNT,
             OUTSIDE_PROCESSING_ACCOUNT,
              INTRANSIT_INV_ACCOUNT, 
            INTERORG_RECEIVABLES_ACCOUNT,
             INTERORG_PRICE_VAR_ACCOUNT, 
             INTERORG_PAYABLES_ACCOUNT, 
            COST_OF_SALES_ACCOUNT, 
            ENCUMBRANCE_ACCOUNT, 
            PROJECT_COST_ACCOUNT, 
            INTERORG_TRANSFER_CR_ACCOUNT,
             INVOICE_PRICE_VAR_ACCOUNT, 
             AVERAGE_COST_VAR_ACCOUNT, 
            SALES_ACCOUNT, EXPENSE_ACCOUNT,
             BORRPAY_MATL_VAR_ACCOUNT, 
            BORRPAY_MOH_VAR_ACCOUNT, 
            BORRPAY_RES_VAR_ACCOUNT,
             BORRPAY_OSP_VAR_ACCOUNT, 
            BORRPAY_OVH_VAR_ACCOUNT, 
            DEFERRED_COGS_ACCOUNT, 
            COSTING_CURRENCY_ID, 
            CREATED_BY,
             CREATION_DATE,
              DELETED) 
         VALUES ( 
                         :SUBSIDIARY_ID ,
                          :COST_METHOD ,
                          :PICKING_RULE_ID ,
                          :MATERIAL_ACCOUNT ,
                          :MATERIAL_OVERHEAD_ACCOUNT ,
                          :MATL_OVHD_ABSORPTION_ACCT ,
                          :RESOURCE_ACCOUNT ,
                          :PURCHASE_PRICE_VAR_ACCOUNT ,
                          :AP_ACCRUAL_ACCOUNT ,
                          :OVERHEAD_ACCOUNT ,
                          :OUTSIDE_PROCESSING_ACCOUNT ,
                          :INTRANSIT_INV_ACCOUNT ,
                          :INTERORG_RECEIVABLES_ACCOUNT ,
                          :INTERORG_PRICE_VAR_ACCOUNT ,
                          :INTERORG_PAYABLES_ACCOUNT ,
                          :COST_OF_SALES_ACCOUNT ,
                          :ENCUMBRANCE_ACCOUNT ,
                          :PROJECT_COST_ACCOUNT ,
                          :INTERORG_TRANSFER_CR_ACCOUNT ,
                          :INVOICE_PRICE_VAR_ACCOUNT ,
                          :AVERAGE_COST_VAR_ACCOUNT ,
                          :SALES_ACCOUNT ,
                          :EXPENSE_ACCOUNT ,
                          :BORRPAY_MATL_VAR_ACCOUNT ,
                          :BORRPAY_MOH_VAR_ACCOUNT ,
                          :BORRPAY_RES_VAR_ACCOUNT ,
                          :BORRPAY_OSP_VAR_ACCOUNT ,
                          :BORRPAY_OVH_VAR_ACCOUNT ,
                          :DEFERRED_COGS_ACCOUNT ,
                          :COSTING_CURRENCY_ID ,
                          :CREATED_BY ,
                          SYSDATE ,
                          0  )
          RETURN COST_METHOD , SUBSIDIARY_ID , PICKING_RULE_ID INTO :R_COST_METHOD , :R_SUBSIDIARY_ID , :R_PICKING_RULE_ID`,
         returns: ["R_COST_METHOD" , "R_SUBSIDIARY_ID" , "R_PICKING_RULE_ID"],
         bindings: [],
         qstring: "",
         requireCommit: true
     },
    getsubsDiary:{
        statment:` SELECT 
        SUBSIDIARY_ID,
        (select EN_NAME from INVENTORY.SUBSIDARIES S where S.SUBSIDIARY_ID = I.SUBSIDIARY_ID) SUBSIDIARY_ID_EN_NAME,
        (select AR_NAME from INVENTORY.SUBSIDARIES S where S.SUBSIDIARY_ID = I.SUBSIDIARY_ID) SUBSIDIARY_ID_AR_NAME,
         COST_METHOD, 
         PICKING_RULE_ID, 
           MATERIAL_ACCOUNT,
            MATERIAL_OVERHEAD_ACCOUNT, 
            MATL_OVHD_ABSORPTION_ACCT, 
           RESOURCE_ACCOUNT,
            PURCHASE_PRICE_VAR_ACCOUNT, AP_ACCRUAL_ACCOUNT, 
           OVERHEAD_ACCOUNT,
            OUTSIDE_PROCESSING_ACCOUNT,
             INTRANSIT_INV_ACCOUNT, 
           INTERORG_RECEIVABLES_ACCOUNT,
            INTERORG_PRICE_VAR_ACCOUNT,
             INTERORG_PAYABLES_ACCOUNT, 
           COST_OF_SALES_ACCOUNT, 
           ENCUMBRANCE_ACCOUNT, 
           PROJECT_COST_ACCOUNT, 
           INTERORG_TRANSFER_CR_ACCOUNT, 
           INVOICE_PRICE_VAR_ACCOUNT,
            AVERAGE_COST_VAR_ACCOUNT, 
           SALES_ACCOUNT,
            EXPENSE_ACCOUNT,
             BORRPAY_MATL_VAR_ACCOUNT, 
           BORRPAY_MOH_VAR_ACCOUNT, 
           BORRPAY_RES_VAR_ACCOUNT, 
           BORRPAY_OSP_VAR_ACCOUNT, 
           BORRPAY_OVH_VAR_ACCOUNT,
            DEFERRED_COGS_ACCOUNT,
             COSTING_CURRENCY_ID, 
           CREATED_BY,
            CREATION_DATE, 
            DELETED, 
           DELETED_BY, 
           DELETED_DATE,
            MODIFIED_BY, 
           MODIFIED_DATE
        FROM INVENTORY.SUBSIDIARY_INV_SETUP  I
          WHERE DELETED = 0 `,            
            bindings: [],
            qstring: "",
            requireCommit: false
        },
    getSubsDiaryByID:{
        statment:`SELECT 
        SUBSIDIARY_ID,
        (select EN_NAME from INVENTORY.SUBSIDARIES S where S.SUBSIDIARY_ID = I.SUBSIDIARY_ID) SUBSIDIARY_ID_EN_NAME,
        (select AR_NAME from INVENTORY.SUBSIDARIES S where S.SUBSIDIARY_ID = I.SUBSIDIARY_ID) SUBSIDIARY_ID_AR_NAME,
         COST_METHOD, 
         PICKING_RULE_ID, 
           MATERIAL_ACCOUNT,
            MATERIAL_OVERHEAD_ACCOUNT, 
            MATL_OVHD_ABSORPTION_ACCT, 
           RESOURCE_ACCOUNT,
            PURCHASE_PRICE_VAR_ACCOUNT, AP_ACCRUAL_ACCOUNT, 
           OVERHEAD_ACCOUNT,
            OUTSIDE_PROCESSING_ACCOUNT,
             INTRANSIT_INV_ACCOUNT, 
           INTERORG_RECEIVABLES_ACCOUNT,
            INTERORG_PRICE_VAR_ACCOUNT,
             INTERORG_PAYABLES_ACCOUNT, 
           COST_OF_SALES_ACCOUNT, 
           ENCUMBRANCE_ACCOUNT, 
           PROJECT_COST_ACCOUNT, 
           INTERORG_TRANSFER_CR_ACCOUNT, 
           INVOICE_PRICE_VAR_ACCOUNT,
            AVERAGE_COST_VAR_ACCOUNT, 
           SALES_ACCOUNT,
            EXPENSE_ACCOUNT,
             BORRPAY_MATL_VAR_ACCOUNT, 
           BORRPAY_MOH_VAR_ACCOUNT, 
           BORRPAY_RES_VAR_ACCOUNT, 
           BORRPAY_OSP_VAR_ACCOUNT, 
           BORRPAY_OVH_VAR_ACCOUNT,
            DEFERRED_COGS_ACCOUNT,
             COSTING_CURRENCY_ID, 
           CREATED_BY,
            CREATION_DATE, 
            DELETED, 
           DELETED_BY, 
           DELETED_DATE,
            MODIFIED_BY, 
           MODIFIED_DATE
        FROM INVENTORY.SUBSIDIARY_INV_SETUP  I
            WHERE subsidiary_id = :SUBSIDIARY_ID AND DELETED = 0`,
            bindings: [],
            qstring: "",
            requireCommit: false
        },
        deletesubsDiary: {
          statement: `UPDATE SUBSIDIARY_INV_SETUP
                        SET DELETED = 1 , DELETED_BY = :DELETED_BY , DELETED_DATE = sysdate
                        WHERE
                            subsidiary_id = :SUBSIDIARY_ID`,
          returns: [],
          bindings: [],
          qstring: "",
          requireCommit: true
        }
};

module.exports = statements;
