let statements = {
    insertItemBalanceUnits: {
        statement: `
        INSERT INTO items_balance_units (
                            items_balance_units_id,
                            items_balance_id,
                            items_id,
                            stores_id,
                            units_id,
                            open_balance,
                            item_cost,
                            average_cost,
                            current_balance,
                            qty_on_hand,
                            qty_reserved,
                            qty_transfer_to,
                            qty_transfer_from,
                            oty_disposed,
                            qty_on_por,
                            qty_on_sor,
                            qty_on_so,
                            qty_on_po,
                            qty_requested,
                            qty_so_consigment,
                            qty_po_consigment,
                            qty_added,
                            last_sold,
                            last_recieved,
                            confirmed,
                            created_by,
                            creation_date,
                            inv_open_balance_items_id
                        ) VALUES (
                          ITEMS_BALANCE_UNITS_SEQ.NEXTVAL,
                          :ITEMS_BALANCE_ID,
                          :ITEMS_ID,
                          :STORES_ID,
                          :UNITS_ID,
                          :OPEN_BALANCE,
                          :ITEM_COST,
                          :AVERAGE_COST,
                          :CURRENT_BALANCE,
                          :QTY_ON_HAND,
                          :QTY_RESERVED,
                          :QTY_TRANSFER_TO,
                          :QTY_TRANSFER_FROM,
                          :OTY_DISPOSED,
                          :QTY_ON_POR,
                          :QTY_ON_SOR,
                          :QTY_ON_SO,
                          :QTY_ON_PO,
                          :QTY_REQUESTED,
                          :QTY_SO_CONSIGMENT,
                          :QTY_PO_CONSIGMENT,
                          :QTY_ADDED,
                          :LAST_SOLD,
                          :LAST_RECIEVED,
                          :CONFIRMED,
                          :CREATED_BY,
                          sysdate,
                          :INV_OPEN_BALANCE_ITEMS_ID
                                      )
                   RETURN ITEMS_BALANCE_ID , ITEMS_ID ,STORES_ID ,  UNITS_ID  INTO :R_ITEMS_BALANCE_ID, :R_ITEMS_ID , :R_STORES_ID, :R_UNITS_ID `,
        returns: ["R_ITEMS_BALANCE_ID", "R_ITEMS_ID" , "R_STORES_ID", "R_UNITS_ID"],
        bindings: [],
        qstring: "",
        requireCommit: true
    },
    getAllItemsBalanceUnits:{
        statment:`SELECT
                      items_balance_units_id,
                      items_balance_id,
                      items_id,
                      (SELECT AR_NAME  FROM INVENTORY.ITEMS M WHERE M.ITEMS_ID = I.ITEMS_ID) ITEM_AR_NAME,
                      (SELECT EN_NAME  FROM INVENTORY.ITEMS M WHERE M.ITEMS_ID = I.ITEMS_ID) ITEM_EN_NAME,
                      (SELECT ITEM_CODE  FROM INVENTORY.ITEMS M WHERE M.ITEMS_ID = I.ITEMS_ID) ITEM_CODE,
                      stores_id,
                      (SELECT AR_NAME  FROM INVENTORY.STORES S WHERE S.STORES_ID = I.STORES_ID) STORE_AR_NAME,
                      (SELECT EN_NAME  FROM INVENTORY.STORES S WHERE S.STORES_ID = I.STORES_ID) STORE_EN_NAME,
                      units_id,
                      (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME)  FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 125 AND STATUS = 1 and L.LOOKUP_DETAIL_ID = I.UNITS_ID) UNITS_NAME,
                      open_balance,
                      item_cost,
                      average_cost,
                      current_balance,
                      qty_on_hand,
                      qty_reserved,
                      qty_transfer_to,
                      qty_transfer_from,
                      oty_disposed,
                      qty_on_por,
                      qty_on_sor,
                      qty_on_so,
                      qty_on_po,
                      qty_requested,
                      qty_so_consigment,
                      qty_po_consigment,
                      qty_added,
                      last_sold,
                      last_recieved,
                      confirmed,
                      created_by,
                      creation_date,
                      deleted,
                      modified_by,
                      modified_date,
                      inv_open_balance_items_id
                  FROM
                      items_balance_units I
                      WHERE DELETED = 0`,
            bindings: [],
            qstring: "",
            requireCommit: false
        },
    getOneItemBalanceUnitsByID:{
        statment:`SELECT
                      items_balance_units_id,
                      items_balance_id,
                      items_id,
                      (SELECT AR_NAME  FROM INVENTORY.ITEMS M WHERE M.ITEMS_ID = I.ITEMS_ID) ITEM_AR_NAME,
                      (SELECT EN_NAME  FROM INVENTORY.ITEMS M WHERE M.ITEMS_ID = I.ITEMS_ID) ITEM_EN_NAME,
                      stores_id,
                      (SELECT AR_NAME  FROM INVENTORY.STORES S WHERE S.STORES_ID = I.STORES_ID) STORE_AR_NAME,
                      (SELECT EN_NAME  FROM INVENTORY.STORES S WHERE S.STORES_ID = I.STORES_ID) STORE_EN_NAME,
                      units_id,
                      (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME)  FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 125 AND STATUS = 1 and L.LOOKUP_DETAIL_ID = I.UNITS_ID) UNITS_NAME,
                      open_balance,
                      item_cost,
                      average_cost,
                      current_balance,
                      qty_on_hand,
                      qty_reserved,
                      qty_transfer_to,
                      qty_transfer_from,
                      oty_disposed,
                      qty_on_por,
                      qty_on_sor,
                      qty_on_so,
                      qty_on_po,
                      qty_requested,
                      qty_so_consigment,
                      qty_po_consigment,
                      qty_added,
                      last_sold,
                      last_recieved,
                      confirmed,
                      created_by,
                      creation_date,
                      deleted,
                      modified_by,
                      modified_date,
                      inv_open_balance_items_id
                  FROM
                      items_balance_units I
                  WHERE items_balance_units_id =:ITEMS_BALANCE_UNITS_ID  AND deleted = 0`,
            bindings: [],
            qstring: "",
            requireCommit: false
        },
        deleteItemsBalanceUnits: {
          statement: `UPDATE items_balance_units
                        SET DELETED = 1 , DELETED_DATE = sysdate
                        WHERE
                            items_balance_units_id = :ITEMS_BALANCE_UNITS_ID`,
          returns: [],
          bindings: [],
          qstring: "",
          requireCommit: true
        },
        getItemBalanceUnitsByStoreID:{
            statment:`SELECT 
            ITEMS_BALANCE_UNITS_ID,
             ITEMS_BALANCE_ID,
              ITEMS_ID, 
              (SELECT AR_NAME  FROM INVENTORY.ITEMS M WHERE M.ITEMS_ID = I.ITEMS_ID) ITEM_AR_NAME,
              (SELECT EN_NAME  FROM INVENTORY.ITEMS M WHERE M.ITEMS_ID = I.ITEMS_ID) ITEM_EN_NAME,
               STORES_ID,
               (SELECT AR_NAME  FROM INVENTORY.STORES S WHERE S.STORES_ID = I.STORES_ID) STORE_AR_NAME,
               (SELECT EN_NAME  FROM INVENTORY.STORES S WHERE S.STORES_ID = I.STORES_ID) STORE_EN_NAME,
                UNITS_ID, 
                (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME)  FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 125 AND STATUS = 1 and L.LOOKUP_DETAIL_ID = I.UNITS_ID) UNITS_NAME,
                OPEN_BALANCE, 
               ITEM_COST, 
               AVERAGE_COST, 
               CURRENT_BALANCE, 
               QTY_ON_HAND,
                QTY_RESERVED, 
                QTY_TRANSFER_TO, 
               QTY_TRANSFER_FROM,
                OTY_DISPOSED,
                 QTY_ON_POR, 
               QTY_ON_SOR,
                QTY_ON_SO,
                 QTY_ON_PO, 
               QTY_REQUESTED,
                QTY_SO_CONSIGMENT,
                 QTY_PO_CONSIGMENT, 
               QTY_ADDED,
                LAST_SOLD, 
                LAST_RECIEVED, 
               CONFIRMED, 
               CREATED_BY,
                CREATION_DATE,  
               MODIFIED_BY,
                MODIFIED_DATE,
                 INV_OPEN_BALANCE_ITEMS_ID
            FROM INVENTORY.ITEMS_BALANCE_UNITS I 
              WHERE DELETED = 0 AND STORES_ID = :STORES_ID`,
                bindings: [],
                qstring: "",
                requireCommit: false
            },
              //add item units and item balance units
  getQuantityOnHand:{
       statement: `select QTY_ON_HAND from items_balance_units
                     where STORES_ID = :STORES_ID 
                       and ITEMS_ID = :ITEMS_ID 
                       and UNITS_ID = :UNITS_ID 
                       and deleted = 0`,
    returns: [],
    bindings: [],
    qstring: "",
    requireCommit: false
  },
      getAllItemsInItemBalanceUnits:{
    statment:`select 
    IBU.items_id,
    IBU.qty_on_hand,
    IBU.current_balance,
    IBU.units_id,
    IBU.stores_id,
    I.EN_NAME,
    I.AR_NAME,
    (SELECT UNIT_FACTOR FROM ITEMS_UNITS IU where IU.ITEMS_ID = IBU.items_id and IU.UNITS_ID = IBU.units_id ) UNIT_FACTOR,
    (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME)  FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 125 AND STATUS = 1 and L.LOOKUP_DETAIL_ID = IBU.UNITS_ID) UNITS_NAME,
    I.ITEM_CODE,
    (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME) name FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 189 AND STATUS = 1 and L.user_code = I.ITEM_KIND) KIND_NAME,
    (select EN_NAME from INVENTORY.ITEMS_GROUP G where G.ITEMS_GROUP_ID = I.ITEMS_GROUP_ID) GROUP_EN_NAME,
    (select EN_NAME from INVENTORY.ITEMS_GROUP G where G.ITEMS_GROUP_ID = I.ITEMS_GROUP_ID) GROUP_AR_NAME,
    (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME) name FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 189 AND STATUS = 1 and L.user_code = I.ITEM_KIND) KIND_NAME,
    (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME) name FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 190 AND STATUS = 1 and L.user_code = I.ITEM_CLASS) CLASS_NAME
    from items_balance_units IBU 
    left join items I
    on IBU.items_id = I.items_id
    where IBU.deleted = 0`,
            bindings: [],
            qstring: "",
            requireCommit: false
        },
};

module.exports = statements;
