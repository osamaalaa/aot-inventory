let statements = {
    insertStockTaking: {
        statement: `
        INSERT INTO inv_stocktaking (
                                  inv_stocktaking_id,
                                  document_type_id,
                                  stocktaking_type_id,
                                  document_date,
                                  inventory_periods_id,
                                  stores_id,
                                  start_date,
                                  end_date,
                                  document_no,
                                  base_document_id,
                                  base_document_type_id,
                                  subsidiary_id,
                                  journals_id,
                                  document_status,
                                  notes,
                                  created_by,
                                  creation_date,
                                  valdiated_by,
                                  valdiated_date,
                                  confirmed_by,
                                  confirmed_date
                              ) VALUES (
                                INV_STOCKTAKING_SEQ.NEXTVAL,
                                :DOCUMENT_TYPE_ID,
                                :STOCKTAKING_TYPE_ID,
                                :DOCUMENT_DATE,
                                :INVENTORY_PERIODS_ID,
                                :STORES_ID,
                                :START_DATE,
                                :END_DATE,
                                :DOCUMENT_NO,
                                :BASE_DOCUMENT_ID,
                                :BASE_DOCUMENT_TYPE_ID,
                                :SUBSIDIARY_ID,
                                :JOURNALS_ID,
                                :DOCUMENT_STATUS,
                                :NOTES,
                                :CREATED_BY,
                                sysdate,
                                :VALDIATED_BY,
                                :VALDIATED_DATE,
                                :CONFIRMED_BY,
                                :CONFIRMED_DATE
                              )
                   RETURN INV_STOCKTAKING_ID,DOCUMENT_TYPE_ID  ,STOCKTAKING_TYPE_ID ,  STORES_ID  INTO :R_INV_STOCKTAKING_ID, :R_DOCUMENT_TYPE_ID, :R_STOCKTAKING_TYPE_ID , :R_STORES_ID `,
        returns: ["R_INV_STOCKTAKING_ID","R_DOCUMENT_TYPE_ID" , "R_STOCKTAKING_TYPE_ID", "R_STORES_ID"],
        bindings: [],
        qstring: "",
        requireCommit: true
    },
    getStockTaking:{
        statment:`SELECT
                          inv_stocktaking_id,
                          document_type_id,
                          (SELECT AR_NAME FROM INVENTORY.DOCUMENT_TYPES T WHERE T.DOCUMENT_TYPE_ID = I.DOCUMENT_TYPE_ID) DOCUMENT_AR_NAME,
                          (SELECT EN_NAME FROM INVENTORY.DOCUMENT_TYPES T WHERE T.DOCUMENT_TYPE_ID = I.DOCUMENT_TYPE_ID) DOCUMENT_EN_NAME,
                          stocktaking_type_id,
                          document_date,
                          inventory_periods_id,
                          (SELECT AR_NAME FROM INVENTORY.INVENTORY_PERIODS P WHERE P.INVENTORY_PERIODS_ID = I.INVENTORY_PERIODS_ID ) INVENTORY_PERIODS_AR_NAME,
                          (SELECT EN_NAME FROM INVENTORY.INVENTORY_PERIODS P WHERE P.INVENTORY_PERIODS_ID = I.INVENTORY_PERIODS_ID ) INVENTORY_PERIODS_EN_NAME,
                          stores_id,
                          (SELECT AR_NAME FROM INVENTORY.STORES S WHERE S.STORES_ID = I.STORES_ID) STORE_AR_NAME,
                          (SELECT EN_NAME FROM INVENTORY.STORES S WHERE S.STORES_ID = I.STORES_ID) STORE_EN_NAME,
                          start_date,
                          end_date,
                          document_no,
                          base_document_id,
                          base_document_type_id,
                          subsidiary_id,
                          (SELECT AR_NAME  FROM AOT_GEN.SUBSIDARIES S WHERE S.SUBSIDIARY_ID = I.SUBSIDIARY_ID) SUBSIDARIE_AR_NAME,
                          (SELECT EN_NAME  FROM AOT_GEN.SUBSIDARIES S WHERE S.SUBSIDIARY_ID = I.SUBSIDIARY_ID) SUBSIDARIE_EN_NAME,
                          journals_id,
                          document_status,
                          (select PRIMARY_NAME || ' ' ||  SECONDARY_NAME FROM HR.LOOKUP_DETAILS  WHERE lookup_detail_id = I.DOCUMENT_STATUS ) STATUS_NAME,
                          notes,
                          created_by,
                          creation_date,
                          valdiated_by,
                          valdiated_date,
                          confirmed_by,
                          confirmed_date,
                          deleted,
                          deleted_by,
                          deleted_date,
                          modified_by,
                          modified_date,
                          wf_request_id
                      FROM
                          inv_stocktaking I
                        WHERE DELETED = 0 `,
            bindings: [],
            qstring: "",
            requireCommit: false
        },
    getOneStockTakingByID:{
        statment:`   SELECT
                          inv_stocktaking_id,
                          document_type_id,
                          (SELECT AR_NAME FROM INVENTORY.DOCUMENT_TYPES T WHERE T.DOCUMENT_TYPE_ID = I.DOCUMENT_TYPE_ID) DOCUMENT_AR_NAME,
                          (SELECT EN_NAME FROM INVENTORY.DOCUMENT_TYPES T WHERE T.DOCUMENT_TYPE_ID = I.DOCUMENT_TYPE_ID) DOCUMENT_EN_NAME,
                          stocktaking_type_id,
                          document_date,
                          inventory_periods_id,
                          (SELECT AR_NAME FROM INVENTORY.INVENTORY_PERIODS P WHERE P.INVENTORY_PERIODS_ID = I.INVENTORY_PERIODS_ID ) INVENTORY_PERIODS_AR_NAME,
                          (SELECT EN_NAME FROM INVENTORY.INVENTORY_PERIODS P WHERE P.INVENTORY_PERIODS_ID = I.INVENTORY_PERIODS_ID ) INVENTORY_PERIODS_EN_NAME,
                          stores_id,
                          (SELECT AR_NAME FROM INVENTORY.STORES S WHERE S.STORES_ID = I.STORES_ID) STORE_AR_NAME,
                          (SELECT EN_NAME FROM INVENTORY.STORES S WHERE S.STORES_ID = I.STORES_ID) STORE_EN_NAME,
                          start_date,
                          end_date,
                          document_no,
                          base_document_id,
                          base_document_type_id,
                          subsidiary_id,
                          (SELECT AR_NAME  FROM AOT_GEN.SUBSIDARIES S WHERE S.SUBSIDIARY_ID = I.SUBSIDIARY_ID) SUBSIDARIE_AR_NAME,
                          (SELECT EN_NAME  FROM AOT_GEN.SUBSIDARIES S WHERE S.SUBSIDIARY_ID = I.SUBSIDIARY_ID) SUBSIDARIE_EN_NAME,
                          journals_id,
                          document_status,
                          (select PRIMARY_NAME || ' ' ||  SECONDARY_NAME FROM HR.LOOKUP_DETAILS  WHERE lookup_detail_id = I.DOCUMENT_STATUS ) STATUS_NAME,
                          notes,
                          created_by,
                          creation_date,
                          valdiated_by,
                          valdiated_date,
                          confirmed_by,
                          confirmed_date,
                          deleted,
                          deleted_by,
                          deleted_date,
                          modified_by,
                          modified_date,
                          wf_request_id
                      FROM
                          inv_stocktaking I
                    WHERE inv_stocktaking_id=:INV_STOCKTAKING_ID AND DELETED = 0 `,
            bindings: [],
            qstring: "",
            requireCommit: false
        }
};

module.exports = statements;
