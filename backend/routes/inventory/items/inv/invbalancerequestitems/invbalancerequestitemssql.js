let statements = {
    getAllInvBalanceReqItems : {
        statement :` SELECT
               INV_BALANCE_REQUEST_ITEMS_ID,
               INV_BALANCE_REQUEST_ID,
               ARRANGEMENT_NO,
               PRE_DEFINED_ITEM,
               AR_NAME,
               EN_NAME,
               AR_DESCRIPTION,
               EN_DESCRIPTION,
               ITEMS_ID,
               (SELECT AR_NAME  FROM INVENTORY.ITEMS M WHERE M.ITEMS_ID = I.ITEMS_ID) ITEM_AR_NAME,
               (SELECT EN_NAME  FROM INVENTORY.ITEMS M WHERE M.ITEMS_ID = I.ITEMS_ID) ITEM_EN_NAME,
               UNITS_ID,
               (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME)  FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 189 AND STATUS = 1 and L.LOOKUP_DETAIL_ID = I.UNITS_ID) UNITS_NAME,
               UNIT_FACTOR,
               UNIT_QUANTITY,
               DEFAULT_UNIT_QUANTITY,
               ITEM_COST,
               TOTAL_COST,
               CURRENT_BALANCE,
               QTY_ON_HAND,
               QTY_RESERVED,
               QTY_TRANSFER_TO,
               QTY_TRANSFER_FROM,
               OTY_DISPOSED,
               QTY_ON_POR,
               QTY_ON_SOR,
               QTY_ON_SO,
               QTY_ON_PO,
               QTY_REQUESTED,
               QTY_SO_CONSIGMENT,
               QTY_PO_CONSIGMENT,
               REORDER_LIMIT,
               MAX_LIMIT,
               MIN_LIMIT,
               NOTES,
               CREATED_BY,
               CREATION_DATE,
               DELETED,
               DELETED_BY,
               DELETED_DATE,
               MODIFIED_BY,
               MODIFIED_DATE
          FROM INV_BALANCE_REQUEST_ITEMS I
          WHERE DELETED = 0  `,
        bindings: [],
        qstring: "",
        requireCommit: false
    },

    getOneInvBalanceReqItems : {
        statement :`  SELECT
               INV_BALANCE_REQUEST_ITEMS_ID,
               INV_BALANCE_REQUEST_ID,
               ARRANGEMENT_NO,
               PRE_DEFINED_ITEM,
               AR_NAME,
               EN_NAME,
               AR_DESCRIPTION,
               EN_DESCRIPTION,
               ITEMS_ID,
               (SELECT AR_NAME  FROM INVENTORY.ITEMS M WHERE M.ITEMS_ID = I.ITEMS_ID) ITEM_AR_NAME,
               (SELECT EN_NAME  FROM INVENTORY.ITEMS M WHERE M.ITEMS_ID = I.ITEMS_ID) ITEM_EN_NNAME,
               UNITS_ID,
               (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME)  FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 125 AND STATUS = 1 and L.LOOKUP_DETAIL_ID = I.UNITS_ID) UNITS_NAME,
               UNIT_FACTOR,
               UNIT_QUANTITY,
               DEFAULT_UNIT_QUANTITY,
               ITEM_COST,
               TOTAL_COST,
               CURRENT_BALANCE,
               QTY_ON_HAND,
               QTY_RESERVED,
               QTY_TRANSFER_TO,
               QTY_TRANSFER_FROM,
               OTY_DISPOSED,
               QTY_ON_POR,
               QTY_ON_SOR,
               QTY_ON_SO,
               QTY_ON_PO,
               QTY_REQUESTED,
               QTY_SO_CONSIGMENT,
               QTY_PO_CONSIGMENT,
               REORDER_LIMIT,
               MAX_LIMIT,
               MIN_LIMIT,
               NOTES,
               CREATED_BY,
               CREATION_DATE,
               DELETED,
               DELETED_BY,
               DELETED_DATE,
               MODIFIED_BY,
               MODIFIED_DATE
          FROM INV_BALANCE_REQUEST_ITEMS I
          WHERE DELETED = 0
          AND INV_BALANCE_REQUEST_ITEMS_ID = :INV_BALANCE_REQUEST_ITEMS_ID `,
        bindings: [],
        qstring: "",
        requireCommit: false
    },

     insertInvBalanceReqItems : {
        statement :`INSERT INTO INV_BALANCE_REQUEST_ITEMS (
            INV_BALANCE_REQUEST_ITEMS_ID,
            INV_BALANCE_REQUEST_ID,
            ARRANGEMENT_NO,
            PRE_DEFINED_ITEM,
            AR_NAME,
            EN_NAME,
            AR_DESCRIPTION,
            EN_DESCRIPTION,
            ITEMS_ID,
            UNITS_ID,
            UNIT_FACTOR,
            UNIT_QUANTITY,
            DEFAULT_UNIT_QUANTITY,
            ITEM_COST,
            TOTAL_COST,
            CURRENT_BALANCE,
            QTY_ON_HAND,
            QTY_RESERVED,
            QTY_TRANSFER_TO,
            QTY_TRANSFER_FROM,
            OTY_DISPOSED,
            QTY_ON_POR,
            QTY_ON_SOR,
            QTY_ON_SO,
            QTY_ON_PO,
            QTY_REQUESTED,
            QTY_SO_CONSIGMENT,
            QTY_PO_CONSIGMENT,
            REORDER_LIMIT,
            MAX_LIMIT,
            MIN_LIMIT,
            NOTES,
            CREATED_BY,
            CREATION_DATE
     )VALUES (
        INV_BALANCE_REQUEST_ITEMS_SEQ.NEXTVAL,
        :INV_BALANCE_REQUEST_ID,
        :ARRANGEMENT_NO,
            :PRE_DEFINED_ITEM,
            :AR_NAME,
            :EN_NAME,
            :AR_DESCRIPTION,
            :EN_DESCRIPTION,
            :ITEMS_ID,
            :UNITS_ID,
            :UNIT_FACTOR,
            :UNIT_QUANTITY,
            :DEFAULT_UNIT_QUANTITY,
            :ITEM_COST,
            :TOTAL_COST,
            :CURRENT_BALANCE,
            :QTY_ON_HAND,
            :QTY_RESERVED,
            :QTY_TRANSFER_TO,
            :QTY_TRANSFER_FROM,
            :OTY_DISPOSED,
            :QTY_ON_POR,
            :QTY_ON_SOR,
            :QTY_ON_SO,
            :QTY_ON_PO,
            :QTY_REQUESTED,
            :QTY_SO_CONSIGMENT,
            :QTY_PO_CONSIGMENT,
            :REORDER_LIMIT,
            :MAX_LIMIT,
            :MIN_LIMIT,
            :NOTES,
            :CREATED_BY,
        sysdate
    )
     RETURN INV_BALANCE_REQUEST_ID into :R_INV_BALANCE_REQUEST_ID `,
        returns :["R_INV_BALANCE_REQUEST_ID"],
        bindings: [],
        qstring: "",
        requireCommit: true
     }


 }


 module.exports = statements ;
