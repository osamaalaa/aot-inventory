let statements = {
  insertnewitem: {
    statement: `
  INSERT INTO ITEMS (
  ITEMS_ID,
  ar_Name,
  en_name,
  AR_DESCRIPTION,
  EN_DESCRIPTION,
  ITEMS_GROUP_ID,
  ITEM_KIND,
  ITEM_CLASS,
  ITEM_NATURE,
  BALANCE_NATURE,
  NUMBER_OF_UNITS,
  SUBSIDIARY_ID,
  PROFIT_MARGIN,
  QTY_ON_ORDER,
  FOR_SALE,
  STATUS,
  IMAGES_ID,
  TAX_SCHEME_ID,
  SHORTAGE_POLICY_ID,
  SLOW_POLICY_ID,
  CREATED_BY,
  CREATION_DATE ,
  ALIASES_TYPE_ID,
  ITEM_CODE,
  ITEMS_TEMPLATE_ID )
  VALUES( ITEMS_SEQ.NEXTVAL,
  :AR_NAME,
  :EN_NAME,
  :AR_DESCRIPTION,
  :EN_DESCRIPTION,
  :ITEMS_GROUP_ID,
  :ITEM_KIND,
  :ITEM_CLASS,
  :ITEM_NATURE,
  :BALANCE_NATURE,
  :NUMBER_OF_UNITS,
  :SUBSIDIARY_ID,
  :PROFIT_MARGIN,
  :QTY_ON_ORDER,
  :FOR_SALE,
  :STATUS,
  :IMAGES_ID,
  :TAX_SCHEME_ID,
  :SHORTAGE_POLICY_ID,
  :SLOW_POLICY_ID,
  :CREATED_BY,
  sysdate ,
  :ALIASES_TYPE_ID,
  :ITEM_CODE,
  :ITEMS_TEMPLATE_ID)
  RETURN ITEMS_ID, AR_NAME , EN_NAME ,AR_DESCRIPTION , EN_DESCRIPTION , ALIASES_TYPE_ID , ITEM_CODE , ITEMS_TEMPLATE_ID INTO :R_ITEMS_ID, :R_AR_NAME, :R_EN_NAME , :R_AR_DESCRIPTION , :R_EN_DESCRIPTION , :R_ALIASES_TYPE_ID ,  :R_ITEM_CODE , :R_ITEMS_TEMPLATE_ID `,
    returns: ["R_ITEMS_ID", "R_AR_NAME", "R_EN_NAME", "R_AR_DESCRIPTION", "R_EN_DESCRIPTION", "R_ALIASES_TYPE_ID", "R_ITEM_CODE", "R_ITEMS_TEMPLATE_ID"],
    bindings: [],
    qstring: "",
    requireCommit: true
  },
  getallitems: {
    statment: `SELECT I.ITEMS_ID,
  I.AR_NAME,
  I.EN_NAME,
  I.AR_DESCRIPTION,
  I.EN_DESCRIPTION,
  I.ITEMS_GROUP_ID,
  (select EN_NAME from INVENTORY.ITEMS_GROUP G where G.ITEMS_GROUP_ID = I.ITEMS_GROUP_ID) GROUP_EN_NAME,
  (select EN_NAME from INVENTORY.ITEMS_GROUP G where G.ITEMS_GROUP_ID = I.ITEMS_GROUP_ID) GROUP_AR_NAME,
  I.ITEM_KIND,
  (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME) name FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 189 AND STATUS = 1 and L.user_code = I.ITEM_KIND) KIND_NAME,
  I.ITEM_CLASS,
  (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME) name FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 190 AND STATUS = 1 and L.user_code = I.ITEM_CLASS) CLASS_NAME,
  I.ITEM_NATURE,
  (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME) name FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 191 AND STATUS = 1 and L.user_code = I.ITEM_NATURE) NATURE_NAME,
  I.BALANCE_NATURE,
  (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME) name FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 192 AND STATUS = 1 and L.user_code = I.BALANCE_NATURE) BALANCE_NATURE_NAME,
  I.NUMBER_OF_UNITS,
  I.SUBSIDIARY_ID,
  I.PROFIT_MARGIN,
  I.QTY_ON_ORDER,
  I.FOR_SALE,
  I.STATUS,
  (decode(I.status, 1, 'ACTIVE', 'INACTIVE')) STATUS_NAME,
  I.IMAGES_ID,
  I.TAX_SCHEME_ID,
  I.SHORTAGE_POLICY_ID,
  I.SLOW_POLICY_ID,
  I.CREATED_BY,
  I.CREATION_DATE,
  I.ALIASES_TYPE_ID,
  I.ITEM_CODE,
  I.ITEMS_TEMPLATE_ID 
  FROM
  items I
  WHERE I.DELETED = 0 
  ORDER BY I.ITEMS_ID DESC`,
    bindings: [],
    qstring: "",
    requireCommit: false
  },
  selectoneitems: {
    statment: `SELECT I.ITEMS_ID,
  I.AR_NAME,
  I.EN_NAME,
  I.AR_DESCRIPTION,
  I.EN_DESCRIPTION,
  I.ITEMS_GROUP_ID,
  (select EN_NAME from INVENTORY.ITEMS_GROUP G where G.ITEMS_GROUP_ID = I.ITEMS_GROUP_ID) GROUP_EN_NAME,
  (select AR_NAME from INVENTORY.ITEMS_GROUP G where G.ITEMS_GROUP_ID = I.ITEMS_GROUP_ID) GROUP_AR_NAME,
  I.ITEM_KIND,
  (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME) name FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 189 AND STATUS = 1 and L.user_code = I.ITEM_KIND) KIND_NAME,
  I.ITEM_CLASS,
  (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME) name FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 190 AND STATUS = 1 and L.user_code = I.ITEM_CLASS) CLASS_NAME,
  I.ITEM_NATURE,
  (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME) name FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 191 AND STATUS = 1 and L.user_code = I.ITEM_NATURE) NATURE_NAME,
  I.BALANCE_NATURE,
  (SELECT nvl(L.PRIMARY_NAME, L.SECONDARY_NAME) name FROM HR.LOOKUP_DETAILS L Where LOOKUP_ID = 192 AND STATUS = 1 and L.user_code = I.BALANCE_NATURE) BALANCE_NATURE_NAME,
  I.NUMBER_OF_UNITS,
  I.SUBSIDIARY_ID,
  I.PROFIT_MARGIN,
  I.QTY_ON_ORDER,
  I.FOR_SALE,
  I.STATUS,
  (decode(I.status, 1, 'ACTIVE', 'INACTIVE')) STATUS_NAME,
  I.IMAGES_ID,
  I.TAX_SCHEME_ID,
  I.SHORTAGE_POLICY_ID,
  I.SLOW_POLICY_ID,
  I.CREATED_BY,
  I.CREATION_DATE,
  I.ALIASES_TYPE_ID,
  I.ITEM_CODE,
  I.ITEMS_TEMPLATE_ID 
  FROM
  items I
  WHERE ITEMS_ID=:ITEMS_ID
  AND deleted = 0 `,
    bindings: [],
    qstring: "",
    requireCommit: false
  },
  selectItemCode: {
    statement: `select ITEM_CODE from ITEMS where ITEM_CODE =:ITEM_CODE`,
    bindings: [],
    qstring: "",
    requireCommit: false
  },
  deleteItems: {
    statement: `UPDATE ITEMS
  SET DELETED = 1  , DELETED_DATE = sysdate
  WHERE
  items_id = :ITEMS_ID`,
    returns: [],
    bindings: [],
    qstring: "",
    requireCommit: true
  },
  getLookUps: {
    statment: `
  SELECT
  L.LOOKUP_DETAIL_ID, L.LOOKUP_ID, L.USER_CODE,
  L.PRIMARY_NAME, L.SECONDARY_NAME, L.STATUS,
  L.SUBSIDIARY_ID, L.CREATION_DATE, L.SYSTEM_FIELD
  FROM HR.LOOKUP_DETAILS L
  Where
  LOOKUP_ID = :LOOKUP_ID
  AND
  STATUS = 1
  `,
    bindings: [],
    qstring: "",
    requireCommit: false
  },
  getLookUpsDetails: {
    statment: `
  SELECT
  LOOKUP_DETAILS_DETAILS_ID, LOOKUP_DETAIL_ID, USER_CODE,
  PRIMARY_NAME, SECONDARY_NAME,
  SUBSIDIARY_ID, CREATION_DATE
  FROM HR.LOOKUP_DETAILS_DETAILS
  WHERE
  LOOKUP_DETAIL_ID = :LOOKUP_DETAIL_ID AND STATUS = 1 AND DELETED = 0
  `,
    bindings: [],
    qstring: "",
    requireCommit: false
  }


};

module.exports = statements;